name: Compose Desktop Build

env:
  GITHUB_DEPLOY: 'false'

on:
  push:
    branches:
      - master
    tags:
      - '*'
    paths-ignore:
      - LICENSE
      - README.md
      - 'docs/**'
      - '.github/config/labels.yml'

  pull_request:
    branches:
      - master

  workflow_dispatch:
  repository_dispatch:
    types: [ app-release ]

defaults:
  run:
    shell: bash

jobs:
  build:
    name: Build Package
    timeout-minutes: 15
    continue-on-error: false
    # if: github.event_name  == 'pull_request'

    runs-on: ubuntu-latest
    container:
      image: arm64v8/gradle

    steps:
      - name: Check out the source code
        uses: actions/checkout@v3

      - name: Cache Gradle dependencies
        uses: actions/cache@v3.0.8
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Gradle Build
        id: gradle-build
        run: ./gradlew packageUberJarForCurrentOS package

      - name: Uploading Arm64 uber jar
        if: steps.gradle-build.outcome == 'success'
        uses: actions/upload-artifact@v3
        with:
          name: ${{ steps.gradle-build.outputs.uber_jar_name }}
          path: |
            ${{ steps.gradle-build.outputs.uber_jar_path }}
          if-no-files-found: error

      - name: Uploading Arm64 native package
        if: steps.gradle-build.outcome == 'success'
        uses: actions/upload-artifact@v3
        with:
          name: ${{ steps.gradle-build.outputs.app_pkg_name }}
          path: |
            ${{ steps.gradle-build.outputs.app_pkg_path }}
          if-no-files-found: error

#  release:
#    name: Release new version.
#    needs: [ build ]
#    if: startsWith(github.ref, 'refs/tags/')
#    runs-on: ubuntu-latest
#
#    steps:
#      - name: Check out the source code
#        uses: actions/checkout@v3
#        with:
#          fetch-depth: 0
#
#      - uses: ffurrer2/extract-release-notes@v1.15.0
#        id: extract_release_notes
#        if: ${{ false }}
#
#      - name: Build Changelog
#        id: github_release
#        uses: mikepenz/release-changelog-builder-action@v3
#        with:
#          configuration: ".github/config/configuration.json"
#          commitMode: true
#          ignorePreReleases: ${{ !contains(github.ref, '-') }}
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#
#      - name: Download all the build artifacts
#        uses: actions/download-artifact@v3
#        with:
#          path: release-artifacts
#
#      - name: Github Release
#        uses: softprops/action-gh-release@v1
#        with:
#          body: ${{ steps.github_release.outputs.changelog }}
#          prerelease: ${{ contains(github.event.inputs.version, '-rc') || contains(github.event.inputs.version, '-b') || contains(github.event.inputs.version, '-a') }}
#          files: |
#            ${{ github.workspace }}/release-artifacts/**
#          fail_on_unmatched_files: true
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}